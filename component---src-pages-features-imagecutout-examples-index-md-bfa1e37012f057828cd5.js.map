{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/features/imagecutout/examples/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"4RAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,yBACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,uBADR,wBAGA,kDAAmC,cAAGC,WAAW,IAC7C,KAAQ,0EADuB,gEAGnC,sEAAuD,cAAGA,WAAW,IACjE,KAAQ,sCAD2C,YAAvD,gCAGA,eACE,GAAM,sDADR,wDAGA,0BAAW,uBAAYA,WAAW,KAAvB,WAAX,gFAA8I,cAAGA,WAAW,IACxJ,KAAQ,gGADkI,eAA9I,gDAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,gbAqBL,kJACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,mKAUL,oGAAqF,uBAAYA,WAAW,KAAvB,WAArF,gCACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,gOAQL,+DAAgD,uBAAYA,WAAW,KAAvB,WAAhD,6KACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,4gBAsBL,eACE,GAAM,oDADR,sDAGA,0DAA2C,cAAGA,WAAW,IACrD,KAAQ,uDAD+B,4BAA3C,wBAE6D,uBAAYA,WAAW,KAAvB,SAF7D,yBAEuI,uBAAYA,WAAW,KAAvB,WAFvI,QAGA,eACE,GAAM,uBADR,wBAGA,oHACA,eACE,GAAM,2DADR,+DAGA,wJAAyI,cAAGA,WAAW,IACnJ,KAAQ,uDAD6H,aAAzI,SAE+B,cAAGA,WAAW,IACzC,KAAQ,qDADmB,aAF/B,0GAKA,eACE,GAAM,sBADR,wBAGA,wCAAyB,cAAGA,WAAW,IACnC,KAAQ,qHADa,QAAzB,0BAGiB,cAAGA,WAAW,IAC3B,KAAQ,gIADK,QAHjB,uHAMA,eACE,GAAM,gBADR,iBAGA,oBACE,eAAIA,WAAW,MAAf,yCAA6D,cAAGA,WAAW,KACvE,KAAQ,yHADiD,QAA7D,+DAGA,eAAIA,WAAW,MAAf,kGACA,eAAIA,WAAW,MAAf,+LACA,eAAIA,WAAW,MAAf,4FAEF,eACE,GAAM,eADR,gBAGA,yEAA0D,cAAGA,WAAW,IACpE,KAAQ,oHAD8C,QAA1D,0EAOJJ,EAAWK,gBAAiB","file":"component---src-pages-features-imagecutout-examples-index-md-bfa1e37012f057828cd5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/cis-photoshop-api-docs-pre-release/cis-photoshop-api-docs-pre-release/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"how-to-use-the-apis\"\n    }}>{`How to use the APIs`}</h1>\n    <p>{`The API's are documented at `}<a parentName=\"p\" {...{\n        \"href\": \"https://adobedocs.github.io/photoshop-api-docs-pre-release/#api-Sensei\"\n      }}>{`https://adobedocs.github.io/photoshop-api-docs/#api-Sensei`}</a></p>\n    <p>{`First be sure to follow the instructions in the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../getting-started/#overview\"\n      }}>{`Overview`}</a>{` section to get your token.`}</p>\n    <h2 {...{\n      \"id\": \"example-1-initiate-a-job-to-create-an-image-cutout\"\n    }}>{`Example 1: Initiate a job to create an image cutout`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`/cutout`}</inlineCode>{` api takes a single input image to generate your mask or cutout from. Using `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/AdobeDocs/cis-photoshop-api-docs-pre-release/blob/main/assets/Example.jpg\"\n      }}>{`Example.jpg`}</a>{`, a typical curl call might look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl -X POST \\\\\n  https://image.adobe.io/sensei/cutout \\\\\n  -H 'Authorization: Bearer <auth_token>' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'x-api-key: <YOUR_API_KEY>' \\\\\n  -d '{\n   \"input\":{\n      \"storage\":\"external\",\n      \"href\":\"<SIGNED_GET_URL>\"\n   },\n   \"output\":{\n      \"storage\":\"external\",\n      \"href\":\"<SIGNED_PUT_URL>\",\n      \"mask\":{\n         \"format\":\"binary\"\n      }\n   }\n}'\n`}</code></pre>\n    <p>{`This initiates an asynchronous job and returns a response containing the href to poll for job status and the JSON manifest.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"_links\": {\n        \"self\": {\n            \"href\": \"https://image.adobe.io/sensei/status/e3a13d81-a462-4b71-9964-28b2ef34aca7\"\n        }\n    }\n}\n`}</code></pre>\n    <p>{`Using the job id returned from the previous call you can poll on the returned `}<inlineCode parentName=\"p\">{`/status`}</inlineCode>{` href to get the job status`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl -X GET \\\\\n  https://image.adobe.io/sensei/status/e3a13d81-a462-4b71-9964-28b2ef34aca7 \\\\\n  -H 'Authorization: Bearer <auth_token>' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'x-api-key: <YOUR_API_KEY>'\n`}</code></pre>\n    <p>{`Once the job is complete your successful `}<inlineCode parentName=\"p\">{`/status`}</inlineCode>{` response will look similar to the response below; The output will have been placed in your requested location. In the event of failure the errors will be shown instead`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"jobID\": \"e3a13d81-a462-4b71-9964-28b2ef34aca7\",\n    \"status\": \"succeeded\",\n    \"created\": \"2020-02-11T21:08:43.789Z\",\n    \"modified\": \"2020-02-11T21:08:48.492Z\",\n    \"input\": \"<SIGNED_GET_URL>\",\n    \"_links\": {\n        \"self\": {\n            \"href\": \"https://image.adobe.io/sensei/status/e3a13d81-a462-4b71-9964-28b2ef34aca7\"\n        }\n    },\n    \"output\": {\n        \"storage\": \"external\",\n        \"href\": \"<SIGNED_PUT_URL>\",\n        \"mask\": {\n            \"format\": \"binary\"\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example-2-initiate-a-job-to-create-an-image-mask\"\n    }}>{`Example 2: Initiate a job to create an image mask`}</h2>\n    <p>{`The workflow is exactly the same as `}<a parentName=\"p\" {...{\n        \"href\": \"#example-1-initiate-a-job-to-create-an-image-cutout\"\n      }}>{`creating an image cutout`}</a>{` except you use the `}<inlineCode parentName=\"p\">{`/mask`}</inlineCode>{` endpoint instead of `}<inlineCode parentName=\"p\">{`/cutout`}</inlineCode>{`.  `}</p>\n    <h2 {...{\n      \"id\": \"customized-workflow\"\n    }}>{`Customized Workflow`}</h2>\n    <p>{`This section will demonstrate how to make a 'customized workflow' by chaining different APIs.`}</p>\n    <h3 {...{\n      \"id\": \"example-3-generate-imagecutout-result-as-photoshop-path\"\n    }}>{`Example 3: (Generate ImageCutOut result as Photoshop path)`}</h3>\n    <p>{`This workflow is ONLY for users who'd like to generate cutout result as Photoshop path instead of regular mask or cutout in above `}<a parentName=\"p\" {...{\n        \"href\": \"#example-1-initiate-a-job-to-create-an-image-cutout\"\n      }}>{`example 1`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"#example-2-initiate-a-job-to-create-an-image-mask\"\n      }}>{`example 2`}</a>{`. You will need to chain API calls to ImageCutOut service and Photoshop Service to achieve this goal.`}</p>\n    <h4 {...{\n      \"id\": \"sample-inputoutput\"\n    }}>{`Sample Input/Output`}</h4>\n    <p>{`Sample input from `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/AdobeDocs/cis-photoshop-api-docs-pre-release/blob/main/assets/ic_customized_workflow/input.jpg\"\n      }}>{`here`}</a>{`.\nSample output from `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/AdobeDocs/cis-photoshop-api-docs-pre-release/blob/main/assets/ic_customized_workflow/result_with_path.jpg\"\n      }}>{`here`}</a>{` (Note: you will need to open result in Photoshop Desktop application so that you will see the path in path panel)`}</p>\n    <h4 {...{\n      \"id\": \"instructions\"\n    }}>{`Instructions`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`Download the make-file.atn file from `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/AdobeDocs/cis-photoshop-api-docs-pre-release/blob/main/assets/ic_customized_workflow/make-path.atn\"\n        }}>{`here`}</a>{` (this file will be used in the Photoshop action API call)`}</li>\n      <li parentName=\"ol\">{`Make the first API call to ImageCutOut service to generate intermediate result as RGBA cutout`}</li>\n      <li parentName=\"ol\">{`Make the second API call to Photoshop action service to use above intermediate result as well as the make-file.atn file to generate final JPEG format result with desired PS path embedded`}</li>\n      <li parentName=\"ol\">{`Open the final result with Photoshop Desktop app to check generated path in path panel`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"sample-code\"\n    }}>{`Sample Code`}</h4>\n    <p>{`You can download the sample end-to-end bash script `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/AdobeDocs/cis-photoshop-api-docs-pre-release/tree/main/sample-code/ic-customized-workflow-app\"\n      }}>{`here`}</a>{` and then follow the comments to try it out this customized workflow.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}