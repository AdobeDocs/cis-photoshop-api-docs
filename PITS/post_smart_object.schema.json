{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "post_smart_object.schema.json",
  "title": "post_smart_object",
  "description": "Initiates an asynchronous job to replace an embedded smart object and also create one ",
  "type": "object",
  "required": ["inputs", "options", "outputs"],
  "properties": {
    "inputs": {
      "$ref": "file_input.schema.json#/definitions/input_objects_max_1"
    },
    "options": {
      "type": "object",
      "minProperties": 1,
      "required": ["layers"],
      "properties": {
        "layers": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "oneOf": [{
                "required": [
                  "id"
                ]
              },
              {
                "required": [
                  "name"
                ]
              }
            ],
            "required": [
              "input"
            ],
            "properties": {
              "id": {
                "$ref": "layers.schema.json#/definitions/id"
              },
              "name": {
                "$ref": "layers.schema.json#/definitions/name"
              },
              "locked": {
                "$ref": "layers.schema.json#/definitions/locked"
              },
              "visible": {
                "$ref": "layers.schema.json#/definitions/visible"
              },
              "add": {
                "$ref": "layers.schema.json#/definitions/add",
                "description": "Inidicates you want to add a new layer. You must also indicate where you want to insert the new layer by supplying one of the attributes `insertAbove`, `insertBelow`, `insertInto`,`insertTop` or `insertBottom`. `add` block overwrites default `edit` block."
              },
              "input": {
                "type": "object",
                "minProperties": 1,
                "description": "An object describing the input file to add or replace for the Embedded Smart Object layer. Edited images are replaced for exact pixel size. Currently supported filetypes includes `png`,`jpeg`,`psd`,`svg`,`ai`,`pdf`.",
                "required": [
                  "href",
                  "storage"
                ],
                "properties": {
                  "storage": {
                    "$ref": "file_input.schema.json#/definitions/storage"
                  },
                  "href": {
                    "$ref": "file_input.schema.json#/definitions/href"
                  }
                },
                "if": {
                  "properties": {
                    "storage": {
                      "pattern": "(^azure|external|dropbox$)"
                    }
                  }
                },
                "then": {
                  "properties": {
                    "href": {
                      "format": "uri",
                      "description": "A URI representing the path to the input file"
                    }
                  }
                },
                "else": {
                  "if": {
                    "properties": {
                      "storage": {
                        "pattern": "(^cclib$)"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "href": {
                        "pattern": "^/?(api)/.+",
                        "description": "A string representing the path to the input CC Libraries file"
                      }
                    }
                  },
                  "else": {
                    "properties": {
                      "href": {
                        "pattern": "^/?(files|temp|cloud-content|assets)/.+",
                        "description": "A string representing the path to the input CC Storage file"
                      }
                    }
                  }
                }

              },
              "bounds": {
                "$ref": "bounds.schema.json#/definitions/bounds",
                "description": "The bounds of this layer. While replacing a smart object if you provide the same aspect ratio(width / height) as of the actual image as a bound,the embedded SO will not be a distorted image."
              }
            }
          }
        }
      }
    },
    "outputs": {
      "$ref": "file_output.schema.json#/definitions/output_objects_smart_object"
    }
  }
}
