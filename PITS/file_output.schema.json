{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "file_output.schema.json",
  "title": "a file output object",
  "description": "Represents the collective fields needed to indicate an output file, destination and format",
  "definitions": {
    "storage": {
      "type": "string",
      "enum": [
        "external",
        "azure",
        "dropbox",
        "adobe",
        "cclib"
      ],
      "default": "external"
    },
    "href": {
      "type": "string",
      "minLength": 1,
      "example": "presignedURL"
    },
    "width": {
      "description": "size, in pixels, of the renditions. Width of 0 generates a full size rendition. Height is not neccessary as the rendition generate will automatically maintain the aspect ratio. Only required for image renditions",
      "type": "number"
    },
    "maxWidth": {
      "description": "size, in pixels, of the renditions. When width is 0, maxWidth can be provided to get the rendition size. maxWidth when less than document width gets precedence over width. Height is not neccessary as the rendition generate will automatically maintain the aspect ratio. ",
      "type": "number"
    },
    "type": {
      "description": "desired image format. 'image/vnd.adobe.photoshop' specifies a PSD file",
      "enum": [
        "image/jpeg",
        "image/png",
        "image/tiff",
        "image/vnd.adobe.photoshop",
        "vnd.adobe.photoshop"
      ],
      "type": "string"
    },
    "compression": {
      "description": "Desired PNG compression level.",
      "enum": [
        "small",
        "medium",
        "large"
      ],
      "type": "string"
    },
    "quality": {
      "description": "desired JPEG image quality, integers range from 1 to 7",
      "type": "number",
      "default": 7,
      "minimum": 1,
      "maximum": 7
    },
    "overwrite": {
      "description": "if the output file already exists should it be overwritten. `overwrite` flag is used only when `storage = \"adobe\"`. Will eventually support eTags",
      "type": "boolean",
      "default": true
    },
    "trimToCanvas": {
      "description": "If the renditions needs to be of Canvas size. True, trims the renditions to Canvas size, while false makes the renditions to Layer Size",
      "type": "boolean",
      "enum": [
        false,
        true
      ],
      "default": false
    },
    "output_object": {
      "type": "object",
      "description": "An object describing the requested file outputs (a new psd file or supported renditions)",
      "required": [
        "href",
        "storage",
        "type"
      ],
      "properties": {
        "href": {
          "$ref": "#/definitions/href"
        },
        "storage": {
          "$ref": "#/definitions/storage"
        },
        "width": {
          "$ref": "#/definitions/width"
        },
        "maxWidth": {
          "$ref": "#/definitions/maxWidth"
        },
        "type": {
          "$ref": "#/definitions/type"
        },
        "quality": {
          "$ref": "#/definitions/quality"
        },
        "compression": {
          "$ref": "#/definitions/compression"
        },
        "overwrite": {
          "$ref": "#/definitions/overwrite"
        },
        "trimToCanvas": {
          "$ref": "#/definitions/trimToCanvas"
        },
        "layers": {
          "$ref": "#/definitions/layers"
        },
        "iccProfile": {
          "$ref": "iccProfile.schema.json#/definitions/iccProfile"
        }
      },
      "allOf": [{
          "if": {
            "properties": {
              "type": {
                "pattern": "image/jpeg"
              }
            }
          },
          "then": {
            "properties": {
              "quality": {
                "description": "desired JPEG image quality, integers range from 1 to 7",
                "type": "number",
                "minimum": 1,
                "maximum": 7
              },
              "compression": {
                "not": {}
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "pattern": "image/png"
              }
            }
          },
          "then": {
            "properties": {
              "compression": {
                "description": "desired PNG compression level: small, medium and large",
                "enum": [
                  "small",
                  "medium",
                  "large"
                ],
                "type": "string"
              },
              "quality": {
                "type": "number",
                "not": {}
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "storage": {
                "pattern": "(^azure|external|dropbox$)",
                "description": "Asset stored on an external service (like AWS S3, Azure, Dropbox). If you are using presigned url for dropbox or azure, use `storage=\"dropbox\"` or `storage=\"azure\"` else it is `storage=\"external\"`"
              }
            }
          },
          "then": {
            "properties": {
              "href": {
                "type": "string",
                "pattern": "^https://",
                "description": "Any public url or a presignedURL for the asset output"
              }
            }
          },
          "else": {
            "if": {
              "properties": {
                "storage": {
                  "pattern": "(^cclib$)"
                }
              }
            },
            "then": {
              "properties": {
                "href": {
                  "pattern": "^/?(api)/.+",
                  "description": "A string representing the path to the output CC Libraries file. </br> Not available for the integrations created with JWT authentication or Service Principle."
                }
              }
            },
            "else": {
              "properties": {
                "href": {
                  "pattern": "^/?(temp|cloud-content|assets|pubs)/.+",
                  "description": "A string representing the path to the output CC Storage file. </br> Not available for the integrations created with JWT authentication or Service Principle."
                }
              }
            }
          }
        }
      ]
    },
    "output_object_smart_object": {
      "type": "object",
      "description": "An object describing the requested file outputs (a new psd file or supported renditions)",
      "required": [
        "href",
        "storage",
        "type"
      ],
      "properties": {
        "href": {
          "$ref": "#/definitions/href"
        },
        "storage": {
          "$ref": "#/definitions/storage"
        },
        "width": {
          "$ref": "#/definitions/width"
        },
        "type": {
          "$ref": "#/definitions/type"
        },
        "overwrite": {
          "$ref": "#/definitions/overwrite"
        }
      },
      "allOf": [{
          "if": {
            "properties": {
              "type": {
                "pattern": "image/jpeg"
              }
            }
          },
          "then": {
            "properties": {
              "quality": {
                "description": "desired JPEG image quality, integers range from 1 to 7",
                "type": "number",
                "minimum": 1,
                "maximum": 7
              },
              "compression": {
                "not": {}
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "pattern": "image/png"
              }
            }
          },
          "then": {
            "properties": {
              "compression": {
                "description": "desired PNG compression level: small, medium and large",
                "enum": [
                  "small",
                  "medium",
                  "large"
                ],
                "type": "string"
              },
              "quality": {
                "type": "number",
                "not": {}
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "storage": {
                "pattern": "(^azure|external|dropbox$)",
                "description": "Asset stored on an external service (like AWS S3, Azure, Dropbox). If you are using presigned url for dropbox or azure, use `storage=\"dropbox\"` or `storage=\"azure\"` else it is `storage=\"external\"`"
              }
            }
          },
          "then": {
            "properties": {
              "href": {
                "type": "string",
                "pattern": "^https://",
                "description": "Any public url or a presignedURL for the asset output"
              }
            }
          },
          "else": {
            "if": {
              "properties": {
                "storage": {
                  "pattern": "(^cclib$)"
                }
              }
            },
            "then": {
              "properties": {
                "href": {
                  "pattern": "^/?(api)/.+",
                  "description": "A string representing the path to the output CC Libraries file. </br> Not available for the integrations created with JWT authentication or Service Principle."
                }
              }
            },
            "else": {
              "properties": {
                "href": {
                  "pattern": "^/?(temp|cloud-content|assets|pubs)/.+",
                  "description": "A string representing the path to the output CC Storage file. </br> Not available for the integrations created with JWT authentication or Service Principle."
                }
              }
            }
          }
        }
      ]
    },
    "layers": {
      "type": "array",
      "minItems": 1,
      "description": "Any layer that needs to be rendered for. Any of `id` or `name` is required.",
      "minProperties": 1,
      "items": {
        "anyOf": [{
          "properties": {
            "id": {
              "type": "integer",
              "description": "The layer id"
            },
            "name": {
              "type": "string",
              "description": "The layer name"
            }
          }
        }]
      }
    },
    "output_objects": {
      "type": "array",
      "minItems": 1,
      "maxItems": 25,
      "description": "An array of hashes describing the output files. Output file format can be any of `psd`, `jpeg`, `png`, or `tiff` and storage type can be any of `external`, `adobe`, `azure` or `dropbox`. Maximum limit of 25 per request.",
      "items": {
        "$ref": "#/definitions/output_object"
      }
    },
    "output_objects_smart_object": {
      "type": "array",
      "minItems": 1,
      "maxItems": 25,
      "description": "An array of hashes describing the output files. Output file format can be any of `psd`, `jpeg`, `png`, or `tiff` and storage type can be any of `external`, `adobe`, `azure` or `dropbox`. Maximum limit of 25 per request.",
      "items": {
        "$ref": "#/definitions/output_object_smart_object"
      }
    }
  }
}
