{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "layers_create.schema.json",
  "title": "layer objects",
  "definitions": {
    "layer_objects": {
      "type": "array",
      "minItems": 1,
      "description": "array of layer objects The complete PSD manifest with your desired layer properties",
      "items": {
        "$ref": "#/definitions/layer_object"
      }
    },
    "layer_object": {
      "type": "object",
      "minProperties": 1,
      "properties": {
        "type": {
          "$ref": "#/definitions/type"
        },
        "adjustments": {
          "$ref": "#/definitions/adjustments"
        },
        "bounds": {
          "$ref": "bounds.schema.json#/definitions/bounds"
        },
        "children": {
          "$ref": "#/definitions/children"
        },
        "input": {
          "$ref": "file_input.schema.json#/definitions/input_object"
        },
        "locked": {
          "$ref": "#/definitions/locked"
        },
        "visible": {
          "$ref": "#/definitions/locked"
        },
        "mask": {
          "$ref": "#/definitions/mask"
        },
        "name": {
          "$ref": "#/definitions/name"
        },
        "smartObject": {
          "$ref": "#/definitions/smart_object"
        },
        "text": {
          "$ref": "#/definitions/text"
        },
        "blendOptions": {
          "$ref": "#/definitions/blendOptions"
        },
        "fill": {
          "$ref": "#/definitions/fill"
        }
      },
      "allOf": [{
          "required": [
            "type"
          ]
        },
        {
          "if": {
            "properties": {
              "type": {
                "enum": [
                  "smartObject"
                ]
              }
            }
          },
          "then": {
            "required": [
              "input"
            ]
          }
        }
      ]
    },
    "adjustments": {
      "type": "object",
      "description": "Supported adjustment layer attributes. Any of `brightnessContrast`, `exposure`, `hueSaturation` or `colorBalance` required",
      "minProperties": 1,
      "anyOf": [{
        "properties": {
          "brightnessContrast": {
            "$ref": "adjustments.schema.json#/definitions/brightness_contrast"
          },
          "exposure": {
            "$ref": "adjustments.schema.json#/definitions/exposure"
          },
          "hueSaturation": {
            "$ref": "adjustments.schema.json#/definitions/hue_saturation"
          },
          "colorBalance": {
            "$ref": "adjustments.schema.json#/definitions/color_balance"
          }
        }
      }]
    },
    "children": {
      "type": "array",
      "minItems": 1,
      "description": "any layers that are children of the current layer (part of the tree representation of grouped layers in PS)"
    },
    "id": {
      "type": "integer",
      "description": "the layer id"
    },
    "index": {
      "type": "integer",
      "description": "the z-index"
    },
    "layerlocator": {
      "anyOf": [{
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the layer you want to insert. Use either id OR name."
          },
          "name": {
            "type": "string",
            "description": "The name of the layer you want to insert . Use either id OR name"
          }
        }
      }]
    },
    "locked": {
      "type": "boolean",
      "description": "Is the layer locked",
      "default": false
    },
    "visible": {
      "type": "boolean",
      "description": "Is the layer visible",
      "default": true
    },
    "mask": {
      "type": "object",
      "minItems": 1,
      "description": "Indicates this mask is applied or edited to this layer ",
      "properties": {
        "input": {
          "$ref": "file_input.schema.json#/definitions/input_object"
        },
        "linked": {
          "type": "boolean",
          "description": "Indicates a mask is linked to the layer or not"
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicates a mask is enabled on that layer or not"
        },
        "offset": {
          "type": "object",
          "minProperties": 1,
          "anyOf": [{
            "properties": {
              "x": {
                "type": "integer",
                "description": "Offset to indicate horizontal move of the mask"
              },
              "y": {
                "type": "integer",
                "description": "Offset to indicate vertical move of the mask"
              }
            }
          }],
          "description": "Offset settings. Any of `x` or `y` is required"
        },
        "clip": {
          "type": "boolean",
          "description": "Is the layer a clipped layer"
        }
      }
    },
    "name": {
      "type": "string",
      "description": "The layer name"
    },
    "smart_object": {
      "type": "object",
      "minItems": 1,
      "description": "Indicates the attributes to create or edit a smart object layer",
      "properties": {
        "linked": {
          "type": "boolean",
          "description": "Indicates if the smart object is a linked smart object or an embedded smart object",
          "default": "false"
        }
      }
    },
    "fill": {
      "type": "object",
      "minItems": 1,
      "minProperties": 1,
      "description": "Indicates the attributes to create or edit a fill layer",
      "properties": {
        "solidColor": {
          "type": "object",
          "description": "An object describing the solid color fill for this fill layer. Currently supported mode is RGB only.",
          "minProperties": 1,
          "required": ["rgb"],
          "properties": {
            "rgb": {
              "type": "object",
              "minProperties": 1,
              "anyOf": [{
                "properties": {
                  "red": {
                    "type": "integer",
                    "description": "the color red value",
                    "minimum": 0,
                    "maximum": 255
                  },
                  "green": {
                    "type": "integer",
                    "description": "the color green value",
                    "minimum": 0,
                    "maximum": 255
                  },
                  "blue": {
                    "type": "integer",
                    "description": "the color blue value",
                    "minimum": 0,
                    "maximum": 255
                  }
                }
              }],
              "description": "Color in 8 bit rgb format"
            }
          }
        }
      }
    },
    "text": {
      "$ref": "text.schema.json#/definitions/text"
    },
    "type": {
      "type": "string",
      "description": "The layer type",
      "enum": [
        "layer",
        "textLayer",
        "adjustmentLayer",
        "layerSection",
        "smartObject",
        "fillLayer",
        "backgroundLayer"
      ]
    },
    "blendOptions": {
      "type": "object",
      "description": "blend options, including opacity and blend mode",
      "minProperties": 1,
      "properties": {
        "opacity": {
          "type": "integer",
          "description": "opacity value",
          "minimum": 0,
          "maximum": 100
        },
        "blendMode": {
          "type": "string",
          "description": "blend mode",
          "enum": [
            "normal",
            "dissolve",
            "darken",
            "multiply",
            "colorBurn",
            "linearBurn",
            "darkerColor",
            "lighten",
            "screen",
            "colorDodge",
            "linearDodge",
            "lighterColor",
            "overlay",
            "softLight",
            "hardLight",
            "vividLight",
            "linearLight",
            "pinLight",
            "hardMix",
            "difference",
            "exclusion",
            "subtract",
            "divide",
            "hue",
            "saturation",
            "color",
            "luminosity"
          ]
        }
      }
    },
    "fill_to_canvas": {
      "type": "boolean",
      "description": "Indicates if the pixels need to proportionally fill into the entire canvas of the document",
      "default": "false"
    },
    "horizontal_align": {
      "type": "string",
      "description": "Indicates the relative horizontal position of the layer with respect to the canvas of the document",
      "enum": [
        "left",
        "center",
        "right"
      ]
    },
    "vertical_align": {
      "type": "string",
      "description": "Indicates the relative vertical position of the layer with respect to the canvas of the document",
      "enum": [
        "top",
        "center",
        "bottom"
      ]
    }
  }
}
