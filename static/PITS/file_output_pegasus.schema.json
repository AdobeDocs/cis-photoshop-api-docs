{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "file_output.schema.json",
  "title": "a file output obect",
  "description": "Represents the collective fields needed to indicate an output file, destination and format",
  "definitions": {
    "output_object": {
      "type": "object",
      "description": "An object describing the requested file outputs (a new psd file or supported renditions)",
      "required": [
        "href",
        "storage",
        "type"
      ],
      "properties": {
        "storage": {
          "$ref": "file_input.schema.json#/definitions/storage"
        },
        "href": {
          "type": "string",
          "minLength": 1
        },
        "type": {
          "description": "desired image format. 'image/vnd.adobe.photoshop' specifies a PSD file",
          "enum": [
            "image/gif",
            "image/jpeg",
            "image/png",
            "image/tiff",
            "image/vnd.adobe.photoshop",
            "vnd.adobe.photoshop"
          ],
          "type": "string"
        },
        "overwrite": {
          "description": "if the output file already exists should it be overwritten. Will eventually support eTags",
          "type": "boolean",
          "default": true
        },
        "compression": {
          "description": "Desired PNG compression level.",
          "enum": [
            "small",
            "medium",
            "large"
          ],
          "type": "string"
        },
        "quality": {
          "description": "desired JPEG image quality, integers range from 1 to 12",
          "type": "number",
          "minimum": 1,
          "maximum": 12
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "pattern": "image/jpeg"
              }
            }
          },
          "then": {
            "properties": {
              "quality": {
                "description": "desired JPEG image quality, integers range from 1 to 12",
                "type": "number",
                "minimum": 1,
                "maximum": 12
              },
              "compression": {
                "not": {}
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "pattern": "image/png"
              }
            }
          },
          "then": {
            "properties": {
              "compression": {
                "description": "desired PNG compression level: small, medium and large",
                "enum": [
                  "small",
                  "medium",
                  "large"
                ],
                "type": "string"
              },
              "quality": {
                "type": "number",
                "not": {}
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "storage": {
                "pattern": "(^azure|external|dropbox$)",
                "description": "Asset stored on an external service (like AWS S3, Azure, Dropbox). If you are using presigned url for dropbox or azure, use `storage=\"dropbox\"` or `storage=\"azure\"` else it is `storage=\"external\"`"
              }
            }
          },
          "then": {
            "properties": {
              "href": {
                "type": "string",
                "pattern": "^https://",
                "description": "Any public url or a presignedURL for the asset output"
              }
            }
          },
          "else": {
            "if" : {
              "properties": {
                "storage": {
                  "pattern": "(^cclib$)"
                }
              }
            },
            "then" : {
              "properties": {
                "href": {
                  "pattern": "^/?(api)/.+",
                  "description": "A string representing the path to the output CC Libraries file. </br> Not available for the integrations created with JWT authentication or Service Principle."
                }
              }
            },
            "else" : {
              "properties": {
                "href": {
                  "pattern": "^/?(temp|cloud-content|assets|pubs)/.+",
                  "description": "A string representing the path to the output CC Storage file. </br> Not available for the integrations created with JWT authentication or Service Principle."
                }
              }
            }
          }
        }
      ]
    },
    "output_objects": {
      "type": "array",
      "minItems": 1,
      "maxItems": 25,
      "description": "An array of hashes describing the output files. Output file format can be any of `psd`, `jpeg`, `png`, or `tiff` and storage type can be any of `external`, `adobe`, `azure` or `dropbox`. Maximum limit of 25 per request.",
      "items": {
        "$ref": "#/definitions/output_object"
      }
    }
  }
}
