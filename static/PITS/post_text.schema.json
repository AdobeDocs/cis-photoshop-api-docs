{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "post_text.schema.json",
  "title": "post_text",
  "description": "Initiates an asynchronous job to add/edit one more text layers in a PSD document.",
  "definitions": {
    "character_styles": {
      "type":"array",
      "minItems":1,
      "description":"array of character_style objects",
      "items": {
        "$ref":"#/definitions/character_style"
      }
    },
    "character_style": {
      "type":"object",
      "description":"character style settings",
      "minProperties": 1,
      "dependencies": {
        "from": { "required": ["to"] },
        "to": { "required": ["from"] }
      },
      "properties": {
        "from": {
          "$ref":"text.schema.json#/definitions/from"
        },
        "to": {
          "$ref":"text.schema.json#/definitions/to"
        },
        "size": {
          "type":"number",
          "description":"the font size, in pixels",
          "minimum":0.04,
          "maximum":5400
        },
        "fontPostScriptName": {
          "type":"string",
          "description":"the font's postscript name."
        },
        "color": {
          "type": "object",
          "allOf": [{
            "required": ["red"]
          },
          {
            "required": ["green"]
          },
          {
            "required": ["blue"]
          }],
					"description": "fontColor in rgb format"
        },
        "font": {
          "type":"object",
          "description":"character style settings",
          "minProperties": 1,
          "properties": {
            "family": {
              "type":"string",
              "description":"the family name of the font"
            },
            "style": {
              "type":"string",
              "description":"the font's style"
            }
          }
        },
        "leading": {
          "type":"number",
          "description":"the font's leading value, where leading is the distance between each line of text."
        },
        "tracking": {
          "type":"number",
          "description":"the font's tracking value, where tracking is the horizontal spacing between a range of characters."
        },
        "baseline": {
          "type":"string",
          "description":"Indicates if the text is raised or lowered in relation to a fontâ€™s baseline",
          "enum":[ "subScript", "superScript" ]
        },
        "fontCaps": {
          "type":"string",
          "description":"the text's capitalization values",
          "enum":[ "allCaps", "smallCaps" ]
        },
        "autoKern": {
          "type":"string",
          "description":"the text's kerning setting. Optical: set based on the shape of the font. Metrics: uses kern pairs included in fonts",
          "enum":[ "opticalKern", "metricsKern" ]
        },
        "strikethrough": {
          "type": "boolean",
          "description": "Toggle strikethrough for selected text"
        },
        "syntheticBold": {
          "type": "boolean",
          "description": "Toggle bold for selected text"
        },
        "syntheticItalic": {
          "type": "boolean",
          "description": "Toggle italic for selected text"
        },
        "underline": {
          "type": "boolean",
          "description": "Toggle underlining of text"
        },
        "ligature": {
          "type": "boolean",
          "description": "Toggle text ligature, which are special characters in a font that combine two (or more)"
        },
        "fractions": {
          "type": "boolean",
          "description": "Toggle automatic formatting of fractions: numbers separated by a slash (such as 1/2)"
        },
        "stylisticAlternates": {
          "type": "boolean",
          "description": "Toggle stylisticAlternates, which formats stylized characters that create a purely aesthetic effect"
        },
        "verticalScale": {
          "type":"number",
          "description":"the amount of vertical scaling to apply to the font",
          "minimum":0,
          "maximum":1000
        },
        "horizontalScale": {
          "type":"number",
          "description":"the amount of horizontal scaling to apply to the font",
          "minimum":0,
          "maximum":1000
        }
      },
      "additionalProperties": false
    },
    "paragraph_styles": {
      "type":"array",
      "minItems":1,
      "description":"array of paragraph_style objects",
      "items": {
        "$ref":"#/definitions/paragraph_style"
      }
    },
    "paragraph_style": {
      "type":"object",
      "minProperties": 1,
      "dependencies": {
        "from": { "required": ["to"] },
        "to": { "required": ["from"] }
      },
      "description":"paragraph style settings",
      "properties": {
        "align": {
          "type":"string",
          "description":"the paragraph alignment",
          "enum":[ "left", "center", "right", "justify", "justifyLeft", "justifyCenter", "justifyRight", "justifyAll" ]
        },
        "startIndent": {
          "type":"number",
          "description":"the amount of indent to add to the left margin"
        },
        "endIndent": {
          "type":"number",
          "description":"the amount of indent to add to the right margin"
        },
        "hyphenate": {
          "type": "boolean",
          "description": "Toggle hyphenate for paragraph text"
        },
        "firstLineIndent": {
          "type":"number",
          "description":"the amount of indent to add to the first line of the paragraph"
        },
        "spaceBefore": {
          "type":"number",
          "description":"the amount of space to add before the paragraph"
        },
        "spaceAfter": {
          "type":"number",
          "description":"the amount of inspace to add after the paragraph"
        },
        "from": {
          "$ref":"text.schema.json#/definitions/from"
        },
        "to": {
          "$ref":"text.schema.json#/definitions/to"
        }
      },
      "additionalProperties": false
    }
  },
  "type": "object",
  "required": [
    "inputs",
    "options",
    "outputs"
  ],
  "properties": {
    "inputs": {
      "$ref":"file_input.schema.json#/definitions/input_objects_max_1"
    },
    "options": {
      "type": "object",
      "minProperties": 1,
      "anyOf": [
        {
          "required": [
            "fonts"
          ]
        },
        {
          "required": [
            "layers"
          ]
        }
      ],
      "properties": {
        "fonts": {
          "$ref": "file_input.schema.json#/definitions/input_objects"
        },
        "layers": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "oneOf": [
              {
                "required": [
                  "id"
                ]
              },
              {
                "required": [
                  "name"
                ]
              }
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "The id of the layer you want to insert. Use either id OR name."
              },
              "name": {
                "type": "string",
                "description": "The name of the layer you want to insert. Use either id OR name"
              },
              "locked": {
                "type": "boolean",
                "description": "is the layer editable"
              },
              "visible": {
                "type": "boolean",
                "description": "is the layer visible"
              },
              "text": {
                "type":"object",
                "definition":"Supported text layer attributes.",
                "minProperties":1,
                "properties": {
                  "contents": {
                    "type":"string",
                    "description":"the text"
                  },
                  "orientation": {
                    "type":"string",
                    "description":"the text's orientation",
                    "enum":[ "horizontal", "vertical" ]
                  },
                  "antiAlias": {
                    "type":"string",
                    "description":"the text's aliasing type",
                    "enum":[ "antiAliasNone", "antiAliasSharp", "antiAliasCrisp", "antiAliasStrong", "antiAliasSmooth", "antiAliasPlatformLCD", "antiAliasPlatformGray" ]
                  },
                  "characterStyles": {
                    "$ref":"#/definitions/character_styles"
                  },
                  "paragraphStyles": {
                    "$ref":"#/definitions/paragraph_styles"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false,
      "jobId": {
        "type": "string"
      },
      "outputs": {
        "$ref": "file_output_pegasus.schema.json#/definitions/output_objects"
      }
    }
  }
}