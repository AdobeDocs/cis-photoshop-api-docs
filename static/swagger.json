{
  "openapi": "3.0.1",
  "info": {
    "title": "Photoshop API documentation",
    "description": "API Documentation",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://image.adobe.io/"
    }
  ],
  "tags": [
    {
      "name": "Lightroom",
      "description": "APIs powered by Lightroom"
    },
    {
      "name": "Image Cutout",
      "description": "APIs powered by Sensei"
    }
  ],
  "paths": {
    "/lrService/autoTone": {
      "post": {
        "tags": [
          "Lightroom"
        ],
        "summary": "Auto tone an image",
        "description": "Initiates an asynchronous job to auto tone an image.\nTo get status of this job,call [Status API](/api/#operation/acrstatus).",
        "operationId": "autoTone",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "description": "API key/client id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "description": "application/json",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "IMS organization ID. This needs to be sent only if it is desirable to receive the job status through Adobe I/O Events.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "$id": "post_auto_tone.schema.json",
                "title": "post_auto_tone",
                "description": "Initiates an asynchronous job to run auto tone",
                "type": "object",
                "required": [
                  "inputs",
                  "outputs"
                ],
                "properties": {
                  "inputs": {
                    "type": "object",
                    "minProperties": 1,
                    "description": "An input file to add or edit",
                    "required": [
                      "href",
                      "storage"
                    ],
                    "properties": {
                      "storage": {
                        "description": "Storage platforms supported.",
                        "type": "string",
                        "enum": [
                          "adobe",
                          "external",
                          "lightroom",
                          "dropbox",
                          "azure"
                        ],
                        "default": "external"
                      },
                      "href": {
                        "description": "Either a presignedURL for storage='external' OR Creative Cloud assets path for storage='adobe' ",
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "if": {
                      "properties": {
                        "storage": {
                          "pattern": "(^adobe$)"
                        }
                      }
                    },
                    "then": {
                      "properties": {
                        "href": {
                          "pattern": "^/?(files|temp|cloud-content|assets)/.+",
                          "description": "A string representing the path to the input CC file"
                        }
                      }
                    },
                    "else": {
                      "properties": {
                        "href": {
                          "format": "uri",
                          "description": "A URI representing the path to the input file"
                        }
                      }
                    }
                  },
                  "outputs": {
                    "type": "array",
                    "minLength": 1,
                    "description": "An array of output objects. each output object will be either 'external' or 'adobe'",
                    "items": {
                      "type": "object",
                      "description": "An object describing the requested file outputs (a new psd file or supported renditions)",
                      "required": [
                        "href",
                        "storage",
                        "type"
                      ],
                      "properties": {
                        "storage": {
                          "description": "Storage platforms supported.",
                          "type": "string",
                          "enum": [
                            "adobe",
                            "external",
                            "lightroom",
                            "dropbox",
                            "azure"
                          ],
                          "default": "external"
                        },
                        "href": {
                          "description": "Either a presignedURL for storage='external' OR Creative Cloud assets path for storage='adobe' ",
                          "type": "string",
                          "minLength": 1
                        },
                        "type": {
                          "description": "Desired output image format",
                          "enum": [
                            "image/jpeg",
                            "image/x-adobe-dng",
                            "image/png"
                          ],
                          "type": "string"
                        },
                        "overwrite": {
                          "description": "If the output file already exists should it be overwritten.",
                          "type": "boolean",
                          "default": true
                        },
                        "quality": {
                          "description": "Quality of the JPEG outputs (will be ignored for other output types). Ranges from 0 to 12, with 12 as the highest quality.",
                          "type": "number",
                          "default": 12,
                          "minimum": 0,
                          "maximum": 12
                        }
                      },
                      "allOf": [
                        {
                          "if": {
                            "properties": {
                              "type": {
                                "pattern": "image/jpeg"
                              }
                            }
                          },
                          "then": {
                            "properties": {
                              "quality": {
                                "description": "Desired JPEG image quality, integers range from 0 to 12",
                                "type": "number",
                                "minimum": 0,
                                "maximum": 12
                              }
                            }
                          }
                        },
                        {
                          "if": {
                            "properties": {
                              "storage": {
                                "pattern": "(^adobe$)"
                              }
                            }
                          },
                          "then": {
                            "properties": {
                              "href": {
                                "pattern": "^/?(files|temp|cloud-content|assets)/.*",
                                "description": "A string representing the path to the output CC file"
                              }
                            }
                          },
                          "else": {
                            "properties": {
                              "href": {
                                "format": "uri",
                                "description": "A URI representing the path to the output file"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "_links": {
                      "type": "object",
                      "description": "_links hrefs the client can use to get status of the asynchronous job.",
                      "properties": {
                        "self": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "format": "string",
                              "description": "The link that client can use to get status of the asynchronous job",
                              "example": "https://image.adobe.io/lrService/status/<:jobId>"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "InputValidationError"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "InputValidationError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 400
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "allowedValues": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "adobe, external, dropbox, azure"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "should be equal to one of the allowed values."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Trial Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Trial Limit Exceeded Error"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "TrialLimitExceededError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 402
                    },
                    "details": {
                      "type": "string",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "example": "Trial limit for the subscribed plan has been exceeded. For questions about additional capacity please reach out to PS team at psdservices@adobe.com"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Unauthorized"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "InvalidAuthTokenError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 403
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "<path_to_invalid_file>"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "Unable to access the input href"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Requested resource was not found"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "ResourceNotFound"
                    },
                    "code": {
                      "type": "int",
                      "format": "int",
                      "description": "A machine-readable error code",
                      "example": 404
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "<path_to_invalid_file>"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "Unable to access the input href"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "x-codeSamples": [
          {
            "lang": "shell",
            "source": "curl --request POST \\\n  --url https://image.adobe.io/lrService/autoTone \\\n  --header 'Authorization: Bearer $token' \\\n  --header 'content-type: application/json' \\\n  --header 'x-api-key: $x-api-key' \\\n  --data '{\"inputs\":{\"href\":\"string\",\"storage\":\"external\"},\"outputs\":[{\"href\":\"string\",\"storage\":\"external\",\"type\":\"image/jpeg\"}]}'"
          }
        ]
      }
    },
    "/lrService/presets": {
      "post": {
        "tags": [
          "Lightroom"
        ],
        "summary": "Apply a presets on an image",
        "description": "Initiates an asynchronous job to apply a preset on an image.\nTo get status of this job,call [Status API](/api/#operation/acrstatus).",
        "operationId": "presets",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "description": "API key/client id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "description": "application/json",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "IMS organization ID. This needs to be sent only if it is desirable to receive the job status through Adobe I/O Events.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "$id": "post_presets.schema.json",
                "title": "post_presets",
                "description": "Initiates an asynchronous job to apply a preset on an image",
                "type": "object",
                "required": [
                  "inputs",
                  "outputs"
                ],
                "properties": {
                  "inputs": {
                    "type": "object",
                    "minProperties": 2,
                    "description": "The input assets for your call",
                    "required": [
                      "source",
                      "presets"
                    ],
                    "properties": {
                      "source": {
                        "type": "object",
                        "minProperties": 1,
                        "description": "An input file to add or edit",
                        "required": [
                          "href",
                          "storage"
                        ],
                        "properties": {
                          "storage": {
                            "description": "Storage platforms supported.",
                            "type": "string",
                            "enum": [
                              "adobe",
                              "external",
                              "lightroom",
                              "dropbox",
                              "azure"
                            ],
                            "default": "external"
                          },
                          "href": {
                            "description": "Either a presignedURL for storage='external' OR Creative Cloud assets path for storage='adobe' ",
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "if": {
                          "properties": {
                            "storage": {
                              "pattern": "(^adobe$)"
                            }
                          }
                        },
                        "then": {
                          "properties": {
                            "href": {
                              "pattern": "^/?(files|temp|cloud-content|assets)/.+",
                              "description": "A string representing the path to the input CC file"
                            }
                          }
                        },
                        "else": {
                          "properties": {
                            "href": {
                              "format": "uri",
                              "description": "A URI representing the path to the input file"
                            }
                          }
                        }
                      },
                      "presets": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "object",
                          "minProperties": 1,
                          "description": "An input file to add or edit",
                          "required": [
                            "href",
                            "storage"
                          ],
                          "properties": {
                            "storage": {
                              "description": "Storage platforms supported.",
                              "type": "string",
                              "enum": [
                                "adobe",
                                "external",
                                "lightroom",
                                "dropbox",
                                "azure"
                              ],
                              "default": "external"
                            },
                            "href": {
                              "description": "Either a presignedURL for storage='external' OR Creative Cloud assets path for storage='adobe' ",
                              "type": "string",
                              "minLength": 1
                            }
                          },
                          "if": {
                            "properties": {
                              "storage": {
                                "pattern": "(^adobe$)"
                              }
                            }
                          },
                          "then": {
                            "properties": {
                              "href": {
                                "pattern": "^/?(files|temp|cloud-content|assets)/.+",
                                "description": "A string representing the path to the input CC file"
                              }
                            }
                          },
                          "else": {
                            "properties": {
                              "href": {
                                "format": "uri",
                                "description": "A URI representing the path to the input file"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "outputs": {
                    "type": "array",
                    "minLength": 1,
                    "description": "An array of output objects. each output object will be either 'external' or 'adobe'",
                    "items": {
                      "type": "object",
                      "description": "An object describing the requested file outputs (a new psd file or supported renditions)",
                      "required": [
                        "href",
                        "storage",
                        "type"
                      ],
                      "properties": {
                        "storage": {
                          "description": "Storage platforms supported.",
                          "type": "string",
                          "enum": [
                            "adobe",
                            "external",
                            "lightroom",
                            "dropbox",
                            "azure"
                          ],
                          "default": "external"
                        },
                        "href": {
                          "description": "Either a presignedURL for storage='external' OR Creative Cloud assets path for storage='adobe' ",
                          "type": "string",
                          "minLength": 1
                        },
                        "type": {
                          "description": "Desired output image format",
                          "enum": [
                            "image/jpeg",
                            "image/x-adobe-dng",
                            "image/png"
                          ],
                          "type": "string"
                        },
                        "overwrite": {
                          "description": "If the output file already exists should it be overwritten.",
                          "type": "boolean",
                          "default": true
                        },
                        "quality": {
                          "description": "Quality of the JPEG outputs (will be ignored for other output types). Ranges from 0 to 12, with 12 as the highest quality.",
                          "type": "number",
                          "default": 12,
                          "minimum": 0,
                          "maximum": 12
                        }
                      },
                      "allOf": [
                        {
                          "if": {
                            "properties": {
                              "type": {
                                "pattern": "image/jpeg"
                              }
                            }
                          },
                          "then": {
                            "properties": {
                              "quality": {
                                "description": "Desired JPEG image quality, integers range from 0 to 12",
                                "type": "number",
                                "minimum": 0,
                                "maximum": 12
                              }
                            }
                          }
                        },
                        {
                          "if": {
                            "properties": {
                              "storage": {
                                "pattern": "(^adobe$)"
                              }
                            }
                          },
                          "then": {
                            "properties": {
                              "href": {
                                "pattern": "^/?(files|temp|cloud-content|assets)/.*",
                                "description": "A string representing the path to the output CC file"
                              }
                            }
                          },
                          "else": {
                            "properties": {
                              "href": {
                                "format": "uri",
                                "description": "A URI representing the path to the output file"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "_links": {
                      "type": "object",
                      "description": "_links hrefs the client can use to get status of the asynchronous job.",
                      "properties": {
                        "self": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "format": "string",
                              "description": "The link that client can use to get status of the asynchronous job",
                              "example": "https://image.adobe.io/lrService/status/<:jobId>"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "InputValidationError"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "InputValidationError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 400
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "allowedValues": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "adobe, external, dropbox, azure"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "should be equal to one of the allowed values."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Trial Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Trial Limit Exceeded Error"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "TrialLimitExceededError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 402
                    },
                    "details": {
                      "type": "string",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "example": "Trial limit for the subscribed plan has been exceeded. For questions about additional capacity please reach out to PS team at psdservices@adobe.com"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Unauthorized"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "InvalidAuthTokenError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 403
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "<path_to_invalid_file>"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "Unable to access the input href"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Requested resource was not found"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "ResourceNotFound"
                    },
                    "code": {
                      "type": "int",
                      "format": "int",
                      "description": "A machine-readable error code",
                      "example": 404
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "<path_to_invalid_file>"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "Unable to access the input href"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "x-codeSamples": [
          {
            "lang": "shell",
            "source": "curl --request POST \\\n  --url https://image.adobe.io/lrService/presets \\\n  --header 'Authorization: Bearer $token' \\\n  --header 'content-type: application/json' \\\n  --header 'x-api-key: $x-api-key' \\\n  --data '{\"inputs\": {\"source\": {\"href\":\"string\",\"storage\":\"external\"}, \\\n\"presets\": [{\"href\":\"string\",\"storage\":\"external\"}]},\"outputs\":[{\"href\":\"string\",\"storage\":\"external\",\"type\":\"type\"}]}'"
          }
        ]
      }
    },
    "/lrService/xmp": {
      "post": {
        "tags": [
          "Lightroom"
        ],
        "summary": "Apply xmp on an image.",
        "description": "Initiates an asynchronous job to apply an XMP setting to an image.\nTo get status of this job,call [Status API](/api/#operation/acrstatus).",
        "operationId": "xmp",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "description": "API key/client id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "description": "application/json",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "IMS organization ID. This needs to be sent only if it is desirable to receive the job status through Adobe I/O Events.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "$id": "post_xmp.schema.json",
                "title": "post_xmp",
                "description": "Initiates an asynchronous job to apply xmp data to an image",
                "type": "object",
                "required": [
                  "inputs",
                  "outputs",
                  "options"
                ],
                "properties": {
                  "inputs": {
                    "type": "object",
                    "minProperties": 1,
                    "description": "The input assets for your call",
                    "required": [
                      "source"
                    ],
                    "properties": {
                      "source": {
                        "type": "object",
                        "minProperties": 1,
                        "description": "An input file to add or edit",
                        "required": [
                          "href",
                          "storage"
                        ],
                        "properties": {
                          "storage": {
                            "description": "Storage platforms supported.",
                            "type": "string",
                            "enum": [
                              "adobe",
                              "external",
                              "lightroom",
                              "dropbox",
                              "azure"
                            ],
                            "default": "external"
                          },
                          "href": {
                            "description": "Either a presignedURL for storage='external' OR Creative Cloud assets path for storage='adobe' ",
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "if": {
                          "properties": {
                            "storage": {
                              "pattern": "(^adobe$)"
                            }
                          }
                        },
                        "then": {
                          "properties": {
                            "href": {
                              "pattern": "^/?(files|temp|cloud-content|assets)/.+",
                              "description": "A string representing the path to the input CC file"
                            }
                          }
                        },
                        "else": {
                          "properties": {
                            "href": {
                              "format": "uri",
                              "description": "A URI representing the path to the input file"
                            }
                          }
                        }
                      }
                    }
                  },
                  "outputs": {
                    "type": "array",
                    "minLength": 1,
                    "description": "An array of output objects. each output object will be either 'external' or 'adobe'",
                    "items": {
                      "type": "object",
                      "description": "An object describing the requested file outputs (a new psd file or supported renditions)",
                      "required": [
                        "href",
                        "storage",
                        "type"
                      ],
                      "properties": {
                        "storage": {
                          "description": "Storage platforms supported.",
                          "type": "string",
                          "enum": [
                            "adobe",
                            "external",
                            "lightroom",
                            "dropbox",
                            "azure"
                          ],
                          "default": "external"
                        },
                        "href": {
                          "description": "Either a presignedURL for storage='external' OR Creative Cloud assets path for storage='adobe' ",
                          "type": "string",
                          "minLength": 1
                        },
                        "type": {
                          "description": "Desired output image format",
                          "enum": [
                            "image/jpeg",
                            "image/x-adobe-dng",
                            "image/png"
                          ],
                          "type": "string"
                        },
                        "overwrite": {
                          "description": "If the output file already exists should it be overwritten.",
                          "type": "boolean",
                          "default": true
                        },
                        "quality": {
                          "description": "Quality of the JPEG outputs (will be ignored for other output types). Ranges from 0 to 12, with 12 as the highest quality.",
                          "type": "number",
                          "default": 12,
                          "minimum": 0,
                          "maximum": 12
                        }
                      },
                      "allOf": [
                        {
                          "if": {
                            "properties": {
                              "type": {
                                "pattern": "image/jpeg"
                              }
                            }
                          },
                          "then": {
                            "properties": {
                              "quality": {
                                "description": "Desired JPEG image quality, integers range from 0 to 12",
                                "type": "number",
                                "minimum": 0,
                                "maximum": 12
                              }
                            }
                          }
                        },
                        {
                          "if": {
                            "properties": {
                              "storage": {
                                "pattern": "(^adobe$)"
                              }
                            }
                          },
                          "then": {
                            "properties": {
                              "href": {
                                "pattern": "^/?(files|temp|cloud-content|assets)/.*",
                                "description": "A string representing the path to the output CC file"
                              }
                            }
                          },
                          "else": {
                            "properties": {
                              "href": {
                                "format": "uri",
                                "description": "A URI representing the path to the output file"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "options": {
                    "type": "object",
                    "minProperties": 1,
                    "required": [
                      "xmp"
                    ],
                    "properties": {
                      "xmp": {
                        "type": "string",
                        "description": "The XMP to apply."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "_links": {
                      "type": "object",
                      "description": "_links hrefs the client can use to get status of the asynchronous job.",
                      "properties": {
                        "self": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "format": "string",
                              "description": "The link that client can use to get status of the asynchronous job",
                              "example": "https://image.adobe.io/lrService/status/<:jobId>"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "InputValidationError"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "InputValidationError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 400
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "allowedValues": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "adobe, external, dropbox, azure"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "should be equal to one of the allowed values."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Trial Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Trial Limit Exceeded Error"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "TrialLimitExceededError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 402
                    },
                    "details": {
                      "type": "string",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "example": "Trial limit for the subscribed plan has been exceeded. For questions about additional capacity please reach out to PS team at psdservices@adobe.com"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Unauthorized"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "InvalidAuthTokenError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 403
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "<path_to_invalid_file>"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "Unable to access the input href"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Requested resource was not found"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "ResourceNotFound"
                    },
                    "code": {
                      "type": "int",
                      "format": "int",
                      "description": "A machine-readable error code",
                      "example": 404
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "<path_to_invalid_file>"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "Unable to access the input href"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "x-codeSamples": [
          {
            "lang": "shell",
            "source": "curl --request POST \\\n  --url https://image.adobe.io/lrService/xmp \\\n  --header 'Authorization: Bearer $token' \\\n  --header 'content-type: application/json' \\\n  --header 'x-api-key: $x-api-key' \\\n  --data '{\"inputs\": {\"source\": {\"href\":\"string\",\"storage\":\"external\"}, \\\n\"options\": {\"xmp\":\"string\"},\"outputs\":[{\"href\":\"string\",\"storage\":\"external\",\"type\":\"type\"}]}'"
          }
        ]
      }
    },
    "/lrService/status/{jobId}": {
      "get": {
        "tags": [
          "Lightroom"
        ],
        "summary": "Returns the status of a job.",
        "description": "Returns the status of a job.",
        "operationId": "acrstatus",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "description": "API key/client id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "description": "application/json",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "IMS organization ID. This needs to be sent only if it is desirable to receive the job status through Adobe I/O Events.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The jobId to get status for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "get_status_success.schema.json",
                  "title": "get_status",
                  "description": "Returns the status of a job.",
                  "type": "object",
                  "properties": {
                    "jobId": {
                      "type": "string",
                      "description": "The job's id requested",
                      "example": "f54e0fcb-260b-47c3-b520-de0d17dc2b67"
                    },
                    "created": {
                      "type": "string",
                      "format": "YYYY-DD-MMThh:mm:ss.mmmmmZ",
                      "description": "Created timestamp of the job."
                    },
                    "modified": {
                      "type": "string",
                      "format": "YYYY-DD-MMThh:mm:ss.mmmmmZ",
                      "description": "Modified timestamp of the job."
                    },
                    "outputs": {
                      "type": "object",
                      "properties": {
                        "input": {
                          "type": "string",
                          "description": "The original input href.",
                          "example": "presigned_GET_URL"
                        },
                        "status": {
                          "type": "string",
                          "description": "The job status",
                          "enum": [
                            "pending",
                            "running",
                            "succeeded",
                            "failed"
                          ],
                          "example": "string"
                        },
                        "details": {
                          "type": "string",
                          "description": "Description of the exact error that is reported by the requested job. Will appear in the response only if there is an error."
                        },
                        "_links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "Either a presignedURL for storage='external' OR Creative Cloud assets path for storage='adobe' ",
                                  "type": "string",
                                  "minLength": 1
                                },
                                "storage": {
                                  "description": "Storage platforms supported.",
                                  "type": "string",
                                  "enum": [
                                    "adobe",
                                    "external",
                                    "lightroom",
                                    "dropbox",
                                    "azure"
                                  ],
                                  "default": "external"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "description": "Link that client can use to track status.",
                              "example": "https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sensei/cutout": {
      "post": {
        "tags": [
          "Image Cutout"
        ],
        "summary": "Create Image Cutout",
        "description": " Generates a PNG file in 4 channel RGBA format with the generated cutout mask \\\n applied to the input image generate a PNG file in 4 channel RGBA format with the generated cutout \\\n mask applied to the input image.",
        "operationId": "cutout",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "description": "API key/client id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "description": "application/json",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "IMS organization ID. This needs to be sent only if it is desirable to receive the job status through Adobe I/O Events.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "$id": "post_cutout.schema.json",
                "title": "post_cutout",
                "description": "",
                "type": "object",
                "required": [
                  "input",
                  "output"
                ],
                "properties": {
                  "input": {
                    "type": "object",
                    "required": [
                      "href",
                      "storage"
                    ],
                    "properties": {
                      "href": {
                        "description": "Either a presignedURL for storage='external' OR Creative Cloud assets path for storage='adobe'.",
                        "type": "string",
                        "minLength": 1
                      },
                      "storage": {
                        "description": "Is the asset stored on Adobe's cloud or an external service (like AWS S3, Azure, Dropbox)",
                        "type": "string",
                        "enum": [
                          "adobe",
                          "external",
                          "azure",
                          "dropbox"
                        ],
                        "default": "external"
                      }
                    },
                    "if": {
                      "properties": {
                        "storage": {
                          "pattern": "(^azure|external|dropbox$)"
                        }
                      }
                    },
                    "then": {
                      "properties": {
                        "href": {
                          "format": "uri",
                          "description": "A URI representing the path to the input file"
                        }
                      }
                    },
                    "else": {
                      "properties": {
                        "href": {
                          "pattern": "^/?(files|temp|cloud-content|assets)/.+",
                          "description": "A string representing the path to the input Creative Cloud file"
                        }
                      }
                    }
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "optimize": {
                        "type": "string",
                        "enum": [
                          "performance",
                          "batch"
                        ],
                        "default": "performance",
                        "description": "The value 'performance' optimizes for speed and 'batch' ensures the job will not fail due to timeout"
                      },
                      "process": {
                        "type": "object",
                        "hidden": true,
                        "properties": {
                          "postprocess": {
                            "type": "boolean"
                          }
                        }
                      },
                      "service": {
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "string",
                            "enum": [
                              "2.0",
                              "3.0"
                            ],
                            "default": "2.0",
                            "description": "Version of the service"
                          }
                        }
                      }
                    }
                  },
                  "output": {
                    "type": "object",
                    "required": [
                      "href",
                      "storage"
                    ],
                    "properties": {
                      "href": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A URI representing the path to the input file"
                      },
                      "storage": {
                        "description": "Is the asset stored on Adobe's cloud or an external service (like AWS S3, Azure, Dropbox)",
                        "type": "string",
                        "enum": [
                          "adobe",
                          "external",
                          "azure",
                          "dropbox"
                        ],
                        "default": "external"
                      },
                      "overwrite": {
                        "description": "If the file already exists, indicates if the output file should be overwritten. Only applies to CC Storage",
                        "type": "boolean",
                        "default": true
                      },
                      "color": {
                        "type": "object",
                        "required": [
                          "space"
                        ],
                        "properties": {
                          "space": {
                            "type": "string",
                            "enum": [
                              "rgba",
                              "rgb"
                            ],
                            "description": "Color space for the output image",
                            "example": "rgb"
                          }
                        }
                      },
                      "mask": {
                        "type": "object",
                        "required": [
                          "format"
                        ],
                        "properties": {
                          "format": {
                            "type": "string",
                            "enum": [
                              "soft",
                              "binary"
                            ],
                            "default": "soft",
                            "description": "A soft (feathered) mask or binary mask"
                          }
                        }
                      }
                    },
                    "if": {
                      "properties": {
                        "storage": {
                          "pattern": "(^azure|external|dropbox$)"
                        }
                      }
                    },
                    "then": {
                      "properties": {
                        "href": {
                          "format": "uri",
                          "description": "A URI representing the path to the input file"
                        }
                      }
                    },
                    "else": {
                      "properties": {
                        "href": {
                          "pattern": "^/?(files|temp|cloud-content|assets)/.+",
                          "description": "A string representing the path to the input Creative Cloud file"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "_links": {
                      "type": "object",
                      "description": "_links hrefs the client can use to get status of the asynchronous job.",
                      "properties": {
                        "self": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "format": "string",
                              "description": "The link that client can use to get status of the asynchronous job",
                              "example": "https://image.adobe.io/lrService/status/<:jobId>"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "InputValidationError"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "InputValidationError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 400
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "allowedValues": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "adobe, external, dropbox, azure"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "should be equal to one of the allowed values."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Trial Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Trial Limit Exceeded Error"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "TrialLimitExceededError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 402
                    },
                    "details": {
                      "type": "string",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "example": "Trial limit for the subscribed plan has been exceeded. For questions about additional capacity please reach out to PS team at psdservices@adobe.com"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Unauthorized"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "InvalidAuthTokenError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 403
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "<path_to_invalid_file>"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "Unable to access the input href"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Requested resource was not found"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "ResourceNotFound"
                    },
                    "code": {
                      "type": "int",
                      "format": "int",
                      "description": "A machine-readable error code",
                      "example": 404
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "<path_to_invalid_file>"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "Unable to access the input href"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "x-codeSamples": [
          {
            "lang": "shell",
            "source": "curl --request POST \\\n  --url https://image.adobe.io/sensei/cutout \\\n  --header 'Authorization: Bearer $token' \\\n  --header 'content-type: application/json' \\\n  --header 'x-api-key: $x-api-key' \\\n  --data '{\"input\":{\"href\":\"string\",\"storage\":\"external\"},\\\n \"output\":{\"href\":\"string\",\"storage\":\"external\",\"overwrite\":true,\"mask\":{\"format\":\"soft\"}}}'"
          }
        ]
      }
    },
    "/sensei/mask": {
      "post": {
        "tags": [
          "Image Cutout"
        ],
        "summary": "Create Mask",
        "description": " generate a mask PNG.",
        "operationId": "mask",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "description": "API key/client id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "description": "application/json",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "IMS organization ID. This needs to be sent only if it is desirable to receive the job status through Adobe I/O Events.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "$id": "post_cutout.schema.json",
                "title": "post_cutout",
                "description": "",
                "type": "object",
                "required": [
                  "input",
                  "output"
                ],
                "properties": {
                  "input": {
                    "type": "object",
                    "required": [
                      "href",
                      "storage"
                    ],
                    "properties": {
                      "href": {
                        "description": "Either a presignedURL for storage='external' OR Creative Cloud assets path for storage='adobe'.",
                        "type": "string",
                        "minLength": 1
                      },
                      "storage": {
                        "description": "Is the asset stored on Adobe's cloud or an external service (like AWS S3, Azure, Dropbox)",
                        "type": "string",
                        "enum": [
                          "adobe",
                          "external",
                          "azure",
                          "dropbox"
                        ],
                        "default": "external"
                      }
                    },
                    "if": {
                      "properties": {
                        "storage": {
                          "pattern": "(^azure|external|dropbox$)"
                        }
                      }
                    },
                    "then": {
                      "properties": {
                        "href": {
                          "format": "uri",
                          "description": "A URI representing the path to the input file"
                        }
                      }
                    },
                    "else": {
                      "properties": {
                        "href": {
                          "pattern": "^/?(files|temp|cloud-content|assets)/.+",
                          "description": "A string representing the path to the input Creative Cloud file"
                        }
                      }
                    }
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "optimize": {
                        "type": "string",
                        "enum": [
                          "performance",
                          "batch"
                        ],
                        "default": "performance",
                        "description": "The value 'performance' optimizes for speed and 'batch' ensures the job will not fail due to timeout"
                      },
                      "process": {
                        "type": "object",
                        "hidden": true,
                        "properties": {
                          "postprocess": {
                            "type": "boolean"
                          }
                        }
                      },
                      "service": {
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "string",
                            "enum": [
                              "2.0",
                              "3.0"
                            ],
                            "default": "2.0",
                            "description": "Version of the service"
                          }
                        }
                      }
                    }
                  },
                  "output": {
                    "type": "object",
                    "required": [
                      "href",
                      "storage"
                    ],
                    "properties": {
                      "href": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A URI representing the path to the input file"
                      },
                      "storage": {
                        "description": "Is the asset stored on Adobe's cloud or an external service (like AWS S3, Azure, Dropbox)",
                        "type": "string",
                        "enum": [
                          "adobe",
                          "external",
                          "azure",
                          "dropbox"
                        ],
                        "default": "external"
                      },
                      "overwrite": {
                        "description": "If the file already exists, indicates if the output file should be overwritten. Only applies to CC Storage",
                        "type": "boolean",
                        "default": true
                      },
                      "color": {
                        "type": "object",
                        "required": [
                          "space"
                        ],
                        "properties": {
                          "space": {
                            "type": "string",
                            "enum": [
                              "rgba",
                              "rgb"
                            ],
                            "description": "Color space for the output image",
                            "example": "rgb"
                          }
                        }
                      },
                      "mask": {
                        "type": "object",
                        "required": [
                          "format"
                        ],
                        "properties": {
                          "format": {
                            "type": "string",
                            "enum": [
                              "soft",
                              "binary"
                            ],
                            "default": "soft",
                            "description": "A soft (feathered) mask or binary mask"
                          }
                        }
                      }
                    },
                    "if": {
                      "properties": {
                        "storage": {
                          "pattern": "(^azure|external|dropbox$)"
                        }
                      }
                    },
                    "then": {
                      "properties": {
                        "href": {
                          "format": "uri",
                          "description": "A URI representing the path to the input file"
                        }
                      }
                    },
                    "else": {
                      "properties": {
                        "href": {
                          "pattern": "^/?(files|temp|cloud-content|assets)/.+",
                          "description": "A string representing the path to the input Creative Cloud file"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "_links": {
                      "type": "object",
                      "description": "_links hrefs the client can use to get status of the asynchronous job.",
                      "properties": {
                        "self": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "format": "string",
                              "description": "The link that client can use to get status of the asynchronous job",
                              "example": "https://image.adobe.io/lrService/status/<:jobId>"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "InputValidationError"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "InputValidationError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 400
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "allowedValues": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "adobe, external, dropbox, azure"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "should be equal to one of the allowed values."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Trial Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Trial Limit Exceeded Error"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "TrialLimitExceededError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 402
                    },
                    "details": {
                      "type": "string",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "example": "Trial limit for the subscribed plan has been exceeded. For questions about additional capacity please reach out to PS team at psdservices@adobe.com"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Unauthorized"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "InvalidAuthTokenError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 403
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "<path_to_invalid_file>"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "Unable to access the input href"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Requested resource was not found"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "ResourceNotFound"
                    },
                    "code": {
                      "type": "int",
                      "format": "int",
                      "description": "A machine-readable error code",
                      "example": 404
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "<path_to_invalid_file>"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "Unable to access the input href"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "x-codeSamples": [
          {
            "lang": "shell",
            "source": "curl --request POST \\\n  --url https://image.adobe.io/sensei/mask \\\n  --header 'Authorization: Bearer $token' \\\n  --header 'content-type: application/json' \\\n  --header 'x-api-key: $x-api-key' \\\n  --data '{\"input\":{\"href\":\"string\",\"storage\":\"external\"},\\\n \"output\":{\"href\":\"string\",\"storage\":\"external\",\"overwrite\":true,\"mask\":{\"format\":\"soft\"}}}'"
          }
        ]
      }
    },
    "/sensei/status/{jobId}": {
      "get": {
        "tags": [
          "Image Cutout"
        ],
        "summary": "Returns the status of a job.",
        "description": "Returns the status of a job.",
        "operationId": "icstatus",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "description": "API key/client id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "description": "application/json",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "IMS organization ID. This needs to be sent only if it is desirable to receive the job status through Adobe I/O Events.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The jobId to get status for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "get_status_success.schema.json",
                  "title": "get_status",
                  "description": "Returns the status of a job.",
                  "type": "object",
                  "properties": {
                    "jobId": {
                      "type": "string",
                      "description": "The job's id requested",
                      "example": "f54e0fcb-260b-47c3-b520-de0d17dc2b67"
                    },
                    "created": {
                      "type": "string",
                      "format": "YYYY-DD-MMThh:mm:ss.mmmmmZ",
                      "description": "Created timestamp of the job."
                    },
                    "modified": {
                      "type": "string",
                      "format": "YYYY-DD-MMThh:mm:ss.mmmmmZ",
                      "description": "Modified timestamp of the job."
                    },
                    "status": {
                      "type": "string",
                      "description": "The job status",
                      "enum": [
                        "pending",
                        "running",
                        "succeeded",
                        "failed"
                      ],
                      "example": "string"
                    },
                    "output": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "minLength": 1,
                          "description": "A URI representing the path to the input file"
                        },
                        "storage": {
                          "description": "Is the asset stored on Adobe's cloud or an external service (like AWS S3, Azure, Dropbox)",
                          "type": "string",
                          "enum": [
                            "adobe",
                            "external",
                            "azure",
                            "dropbox"
                          ],
                          "default": "external"
                        },
                        "mask": {
                          "type": "object",
                          "required": [
                            "format"
                          ],
                          "properties": {
                            "format": {
                              "type": "string",
                              "enum": [
                                "soft",
                                "binary"
                              ],
                              "default": "soft",
                              "description": "A soft (feathered) mask or binary mask"
                            }
                          }
                        },
                        "color": {
                          "type": "object",
                          "required": [
                            "space"
                          ],
                          "properties": {
                            "space": {
                              "type": "string",
                              "enum": [
                                "rgba",
                                "rgb"
                              ],
                              "description": "Color space for the output image",
                              "example": "rgb"
                            }
                          }
                        }
                      }
                    },
                    "options": {
                      "type": "object",
                      "properties": {
                        "optimize": {
                          "type": "string",
                          "enum": [
                            "performance",
                            "batch"
                          ],
                          "default": "performance",
                          "description": "The value 'performance' optimizes for speed and 'batch' ensures the job will not fail due to timeout"
                        }
                      }
                    },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "description": "Link that client can use to track status.",
                              "example": "https://image.adobe.io/sensei/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lrService/autoStraighten": {
      "post": {
        "tags": [
          "Lightroom"
        ],
        "summary": "Auto straighten an image",
        "description": "Initiates an asynchronous job to auto straighten an image. \\\nTo get status of this job, call [Status API](/api/#operation/acrstatus).",
        "operationId": "autoStraighten",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "description": "API key/client id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "description": "application/json",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "IMS organization ID. This needs to be sent only if it is desirable to receive the job status through Adobe I/O Events.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "$id": "post_auto_straighten.schema.json",
                "title": "post_auto_straighten",
                "description": "Initiates an asynchronous job to run auto straighten",
                "type": "object",
                "required": [
                  "inputs",
                  "outputs"
                ],
                "properties": {
                  "inputs": {
                    "type": "object",
                    "minProperties": 1,
                    "description": "An input file to add or edit",
                    "required": [
                      "href",
                      "storage"
                    ],
                    "properties": {
                      "storage": {
                        "description": "Storage platforms supported.",
                        "type": "string",
                        "enum": [
                          "adobe",
                          "external",
                          "lightroom",
                          "dropbox",
                          "azure"
                        ],
                        "default": "external"
                      },
                      "href": {
                        "description": "Either a presignedURL for storage='external' OR Creative Cloud assets path for storage='adobe' ",
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "if": {
                      "properties": {
                        "storage": {
                          "pattern": "(^adobe$)"
                        }
                      }
                    },
                    "then": {
                      "properties": {
                        "href": {
                          "pattern": "^/?(files|temp|cloud-content|assets)/.+",
                          "description": "A string representing the path to the input CC file"
                        }
                      }
                    },
                    "else": {
                      "properties": {
                        "href": {
                          "format": "uri",
                          "description": "A URI representing the path to the input file"
                        }
                      }
                    }
                  },
                  "options": {
                    "type": "object",
                    "required": [
                      "uprightMode"
                    ],
                    "properties": {
                      "uprightMode": {
                        "type": "string",
                        "enum": [
                          "auto",
                          "full",
                          "level",
                          "vertical"
                        ],
                        "description": "The upright mode to use. If you have the options block, then this is a required field. If options block is not specified, then the appropriate upright mode will automatically be selected."
                      },
                      "constrainCrop": {
                        "type": "boolean",
                        "description": "If the straightened image should be constrain cropped, to remove all blank edges around an image.",
                        "default": true
                      }
                    }
                  },
                  "outputs": {
                    "type": "array",
                    "minLength": 1,
                    "description": "An array of output objects. each output object will be either 'external' or 'adobe'",
                    "items": {
                      "type": "object",
                      "description": "An object describing the requested file outputs (a new psd file or supported renditions)",
                      "required": [
                        "href",
                        "storage",
                        "type"
                      ],
                      "properties": {
                        "storage": {
                          "description": "Storage platforms supported.",
                          "type": "string",
                          "enum": [
                            "adobe",
                            "external",
                            "lightroom",
                            "dropbox",
                            "azure"
                          ],
                          "default": "external"
                        },
                        "href": {
                          "description": "Either a presignedURL for storage='external' OR Creative Cloud assets path for storage='adobe' ",
                          "type": "string",
                          "minLength": 1
                        },
                        "type": {
                          "description": "Desired output image format",
                          "enum": [
                            "image/jpeg",
                            "image/x-adobe-dng",
                            "image/png"
                          ],
                          "type": "string"
                        },
                        "overwrite": {
                          "description": "If the output file already exists should it be overwritten.",
                          "type": "boolean",
                          "default": true
                        },
                        "quality": {
                          "description": "Quality of the JPEG outputs (will be ignored for other output types). Ranges from 0 to 12, with 12 as the highest quality.",
                          "type": "number",
                          "default": 12,
                          "minimum": 0,
                          "maximum": 12
                        }
                      },
                      "allOf": [
                        {
                          "if": {
                            "properties": {
                              "type": {
                                "pattern": "image/jpeg"
                              }
                            }
                          },
                          "then": {
                            "properties": {
                              "quality": {
                                "description": "Desired JPEG image quality, integers range from 0 to 12",
                                "type": "number",
                                "minimum": 0,
                                "maximum": 12
                              }
                            }
                          }
                        },
                        {
                          "if": {
                            "properties": {
                              "storage": {
                                "pattern": "(^adobe$)"
                              }
                            }
                          },
                          "then": {
                            "properties": {
                              "href": {
                                "pattern": "^/?(files|temp|cloud-content|assets)/.*",
                                "description": "A string representing the path to the output CC file"
                              }
                            }
                          },
                          "else": {
                            "properties": {
                              "href": {
                                "format": "uri",
                                "description": "A URI representing the path to the output file"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "_links": {
                      "type": "object",
                      "description": "_links hrefs the client can use to get status of the asynchronous job.",
                      "properties": {
                        "self": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "format": "string",
                              "description": "The link that client can use to get status of the asynchronous job",
                              "example": "https://image.adobe.io/lrService/status/<:jobId>"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "InputValidationError"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "InputValidationError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 400
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "allowedValues": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "adobe, external, dropbox, azure"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "should be equal to one of the allowed values."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Trial Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Trial Limit Exceeded Error"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "TrialLimitExceededError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 402
                    },
                    "details": {
                      "type": "string",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "example": "Trial limit for the subscribed plan has been exceeded. For questions about additional capacity please reach out to PS team at psdservices@adobe.com"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Unauthorized"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "InvalidAuthTokenError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 403
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "<path_to_invalid_file>"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "Unable to access the input href"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Requested resource was not found"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "ResourceNotFound"
                    },
                    "code": {
                      "type": "int",
                      "format": "int",
                      "description": "A machine-readable error code",
                      "example": 404
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "<path_to_invalid_file>"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "Unable to access the input href"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "x-codeSamples": [
          {
            "lang": "shell",
            "source": "curl --request POST \\\n  --url https://image.adobe.io/lrService/autoStraighten \\\n  --header 'Authorization: Bearer $token' \\\n  --header 'content-type: application/json' \\\n  --header 'x-api-key: $x-api-key' \\\n  --data '{\"inputs\":{\"href\":\"string\",\"storage\":\"external\"},\\\n\"options\":{\"uprightMode\":\"full\",\"constrainCrop\":false},\"outputs\":[{\"href\":\"string\",\"storage\":\"external\",\"type\":\"image/jpeg\"}]}'"
          }
        ]
      }
    },
    "/lrService/edit": {
      "post": {
        "tags": [
          "Lightroom"
        ],
        "summary": "Apply edits on an image.",
        "description": "Initiates an asynchronous job to apply a set of edit parameters on an image.\nTo get status of this job,call [Status API](/api/#operation/acrstatus).",
        "operationId": "edit",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "description": "API key/client id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "description": "application/json",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "IMS organization ID. This needs to be sent only if it is desirable to receive the job status through Adobe I/O Events.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "$id": "post_image_edit.schema.json",
                "title": "post_image_edit",
                "description": "Initiates an asynchronous job to edit an image",
                "type": "object",
                "required": [
                  "inputs",
                  "outputs",
                  "options"
                ],
                "properties": {
                  "inputs": {
                    "type": "object",
                    "minProperties": 1,
                    "description": "The input assets for your call",
                    "required": [
                      "source"
                    ],
                    "properties": {
                      "source": {
                        "type": "object",
                        "minProperties": 1,
                        "description": "An input file to add or edit",
                        "required": [
                          "href",
                          "storage"
                        ],
                        "properties": {
                          "storage": {
                            "description": "Storage platforms supported.",
                            "type": "string",
                            "enum": [
                              "adobe",
                              "external",
                              "lightroom",
                              "dropbox",
                              "azure"
                            ],
                            "default": "external"
                          },
                          "href": {
                            "description": "Either a presignedURL for storage='external' OR Creative Cloud assets path for storage='adobe' ",
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "if": {
                          "properties": {
                            "storage": {
                              "pattern": "(^adobe$)"
                            }
                          }
                        },
                        "then": {
                          "properties": {
                            "href": {
                              "pattern": "^/?(files|temp|cloud-content|assets)/.+",
                              "description": "A string representing the path to the input CC file"
                            }
                          }
                        },
                        "else": {
                          "properties": {
                            "href": {
                              "format": "uri",
                              "description": "A URI representing the path to the input file"
                            }
                          }
                        }
                      }
                    }
                  },
                  "outputs": {
                    "type": "array",
                    "minLength": 1,
                    "description": "An array of output objects. each output object will be either 'external' or 'adobe'",
                    "items": {
                      "type": "object",
                      "description": "An object describing the requested file outputs (a new psd file or supported renditions)",
                      "required": [
                        "href",
                        "storage",
                        "type"
                      ],
                      "properties": {
                        "storage": {
                          "description": "Storage platforms supported.",
                          "type": "string",
                          "enum": [
                            "adobe",
                            "external",
                            "lightroom",
                            "dropbox",
                            "azure"
                          ],
                          "default": "external"
                        },
                        "href": {
                          "description": "Either a presignedURL for storage='external' OR Creative Cloud assets path for storage='adobe' ",
                          "type": "string",
                          "minLength": 1
                        },
                        "type": {
                          "description": "Desired output image format",
                          "enum": [
                            "image/jpeg",
                            "image/x-adobe-dng",
                            "image/png"
                          ],
                          "type": "string"
                        },
                        "overwrite": {
                          "description": "If the output file already exists should it be overwritten.",
                          "type": "boolean",
                          "default": true
                        },
                        "quality": {
                          "description": "Quality of the JPEG outputs (will be ignored for other output types). Ranges from 0 to 12, with 12 as the highest quality.",
                          "type": "number",
                          "default": 12,
                          "minimum": 0,
                          "maximum": 12
                        }
                      },
                      "allOf": [
                        {
                          "if": {
                            "properties": {
                              "type": {
                                "pattern": "image/jpeg"
                              }
                            }
                          },
                          "then": {
                            "properties": {
                              "quality": {
                                "description": "Desired JPEG image quality, integers range from 0 to 12",
                                "type": "number",
                                "minimum": 0,
                                "maximum": 12
                              }
                            }
                          }
                        },
                        {
                          "if": {
                            "properties": {
                              "storage": {
                                "pattern": "(^adobe$)"
                              }
                            }
                          },
                          "then": {
                            "properties": {
                              "href": {
                                "pattern": "^/?(files|temp|cloud-content|assets)/.*",
                                "description": "A string representing the path to the output CC file"
                              }
                            }
                          },
                          "else": {
                            "properties": {
                              "href": {
                                "format": "uri",
                                "description": "A URI representing the path to the output file"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "options": {
                    "type": "object",
                    "minProperties": 1,
                    "additionalProperties": false,
                    "properties": {
                      "Exposure": {
                        "type": "number",
                        "minimum": -5,
                        "maximum": 5,
                        "multipleOf": 0.01
                      },
                      "Saturation": {
                        "type": "number",
                        "minimum": -100,
                        "maximum": 100
                      },
                      "Contrast": {
                        "type": "number",
                        "minimum": -100,
                        "maximum": 100
                      },
                      "VignetteAmount": {
                        "type": "number",
                        "minimum": -100,
                        "maximum": 100
                      },
                      "Vibrance": {
                        "type": "number",
                        "minimum": -100,
                        "maximum": 100
                      },
                      "Highlights": {
                        "type": "number",
                        "minimum": -100,
                        "maximum": 100
                      },
                      "Shadows": {
                        "type": "number",
                        "minimum": -100,
                        "maximum": 100
                      },
                      "Whites": {
                        "type": "number",
                        "minimum": -100,
                        "maximum": 100
                      },
                      "Blacks": {
                        "type": "number",
                        "minimum": -100,
                        "maximum": 100
                      },
                      "Clarity": {
                        "type": "number",
                        "minimum": -100,
                        "maximum": 100
                      },
                      "Dehaze": {
                        "type": "number",
                        "minimum": -100,
                        "maximum": 100
                      },
                      "Texture": {
                        "type": "number",
                        "minimum": -100,
                        "maximum": 100
                      },
                      "Sharpness": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 150
                      },
                      "ColorNoiseReduction": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100
                      },
                      "NoiseReduction": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100
                      },
                      "SharpenDetail": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100
                      },
                      "SharpenEdgeMasking": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100
                      },
                      "SharpenRadius": {
                        "type": "number",
                        "minimum": 0.5,
                        "maximum": 3,
                        "multipleOf": 0.01
                      },
                      "WhiteBalance": {
                        "type": "string",
                        "enum": [
                          "As Shot",
                          "Auto",
                          "Cloudy",
                          "Custom",
                          "Daylight",
                          "Flash",
                          "Fluorescent",
                          "Shade",
                          "Tungsten"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "_links": {
                      "type": "object",
                      "description": "_links hrefs the client can use to get status of the asynchronous job.",
                      "properties": {
                        "self": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "format": "string",
                              "description": "The link that client can use to get status of the asynchronous job",
                              "example": "https://image.adobe.io/lrService/status/<:jobId>"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "InputValidationError"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "InputValidationError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 400
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "allowedValues": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "adobe, external, dropbox, azure"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "should be equal to one of the allowed values."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Trial Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Trial Limit Exceeded Error"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "TrialLimitExceededError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 402
                    },
                    "details": {
                      "type": "string",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "example": "Trial limit for the subscribed plan has been exceeded. For questions about additional capacity please reach out to PS team at psdservices@adobe.com"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Unauthorized"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "InvalidAuthTokenError"
                    },
                    "code": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error code",
                      "example": 403
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "<path_to_invalid_file>"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "Unable to access the input href"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "api_response.schema.json",
                  "title": "api_response",
                  "description": "Provides API response",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "format": "string",
                      "description": "A short, human-readable summary of the problem",
                      "example": "Requested resource was not found"
                    },
                    "type": {
                      "type": "string",
                      "format": "string",
                      "description": "A machine-readable error type",
                      "example": "ResourceNotFound"
                    },
                    "code": {
                      "type": "int",
                      "format": "int",
                      "description": "A machine-readable error code",
                      "example": 404
                    },
                    "details": {
                      "type": "object",
                      "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name for the detailed error.",
                          "example": "<path_to_invalid_file>"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Details of error reason.",
                          "example": "Unable to access the input href"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "x-codeSamples": [
          {
            "lang": "shell",
            "source": "curl --request POST \\\n  --url https://image.adobe.io/lrService/xmp \\\n  --header 'Authorization: Bearer $token' \\\n  --header 'content-type: application/json' \\\n  --header 'x-api-key: $x-api-key' \\\n  --data '{\"inputs\": {\"source\": {\"href\":\"string\",\"storage\":\"external\"}, \\\n\"options\": \"<options>\"},\"outputs\":[{\"href\":\"string\",\"storage\":\"external\",\"type\":\"type\"}]}'"
          }
        ]
      }
    }
  }
}