{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "get_status_success.schema.json",
  "title": "get_status",
  "description": "Returns the status of a job.",
  "type": "object",
  "properties": {
    "jobId": {
      "type": "string",
      "description": "The job's id requested",
      "example": "f54e0fcb-260b-47c3-b520-de0d17dc2b67"
    },
    "created": {
      "type": "string",
      "format": "YYYY-DD-MMThh:mm:ss.mmmmmZ",
      "description": "Created timestamp of the job."
    },
    "modified": {
      "type": "string",
      "format": "YYYY-DD-MMThh:mm:ss.mmmmmZ",
      "description": "Modified timestamp of the job."
    },
    "status": {
      "type": "string",
      "description": "The job status",
      "enum": [
        "pending",
        "running",
        "succeeded",
        "failed"
      ],
      "example": "string"
    },
    "metadata": {
      "type": "object",
      "properties": {
        "service": {
          "type": "object",
          "properties": {
            "version": {
              "type":"string",
              "enum":["4.0"],
              "default": "4.0",
              "description": "Version of the service"
            }
          }
        }
      }
    },
    "output": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "minLength": 1,
          "description": "A URI representing the path to the input file"
        },
        "storage": {
          "description": "Is the asset stored on Adobe's cloud or an external service (like AWS S3, Azure, Dropbox)",
          "type": "string",
          "enum": [
            "adobe",
            "external",
            "azure",
            "dropbox"
          ],
          "default": "external"
        },
        "mask": {
          "type":"object",
          "required":["format"],
          "properties":{
            "format":{
              "type":"string",
              "enum":["soft","binary"],
              "default": "soft",
              "description": "A soft (feathered) mask or binary mask"
            }
          }
        },
        "color": {
          "type":"object",
          "required":["space"],
          "properties":{
            "space":{
              "type":"string",
              "enum":["rgba","rgb"],
              "description": "Color space for the output image",
              "example": "rgb"
            }
          }
        }
      }
    },
    "options":{
      "type":"object",
      "properties":{
        "optimize": {
          "type": "string",
          "enum":["performance","batch"],
          "default": "performance",
          "description": "The value 'performance' optimizes for speed. 'batch' ensures the job will ultimately run regardless of wait time"
        }
      }
    },
    "errors": {
      "type": "array",
      "minItems": 1,
      "description" : "`errors` block will contain items only when there is an error from the API called. e.g if `/sensei/cutout` API throws an error we will see items in this `errors` block on the status API call",
      "items": {
        "properties": {
          "title": {
            "type": "string",
            "format": "string",
            "description": "A short, human-readable summary of the problem",
            "example": "Requested resource was not found"
          },
          "type": {
            "type": "string",
            "format": "string",
            "description": "A machine-readable error type",
            "example": "ResourceNotFound"
          },
          "code": {
            "type": "integer",
            "format": "int",
            "description": "A machine-readable error code",
            "example": 404
          },
          "details": {
            "type": "object",
            "description": "Further descriptions of the exact error where details is substituted for a specific issue.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name for the detailed error.",
                "example": "<path_to_invalid_file>"
              },
              "reason": {
                "type": "string",
                "description": "Details of error reason.",
                "example": "Unable to access the input href"
              }
            }
          }
        }
      }
    },
    "_links": {
      "type": "object",
      "properties": {
        "self": {
          "type": "object",
          "properties": {
            "href": {
              "type": "string",
              "description": "Link that client can use to track status.",
              "example": "https://image.adobe.io/sensei/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67"
            }
          }
        }
      }
    }
  }
}
