{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/features/imagecutout/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0RAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,yBACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,YADR,aAGA,6OAA8N,cAAGC,WAAW,IACxO,KAAQ,2EADkN,QAA9N,uOAGA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,UADX,aAGA,eAAIA,WAAW,KACb,MAAS,UADX,SAGA,eAAIA,WAAW,KACb,MAAS,UADX,aAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,WACR,gBAAKA,WAAW,KACf,IAAO,kCACP,IAAO,WACP,MAAS,qBAEb,eAAIA,WAAW,KACb,MAAS,WACR,gBAAKA,WAAW,KACf,IAAO,kCACP,IAAO,WACP,MAAS,WAEb,eAAIA,WAAW,KACb,MAAS,WACR,gBAAKA,WAAW,KACf,IAAO,oCACP,IAAO,WACP,MAAS,wBAKnB,eACE,GAAM,oBADR,qBAGA,4FAA6E,cAAGA,WAAW,IACvF,KAAQ,iCADiE,iCAA7E,mNAOJJ,EAAWK,gBAAiB","file":"component---src-pages-features-imagecutout-index-md-456b2abc7b49867fe56f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/cis-photoshop-api-docs-pre-release/cis-photoshop-api-docs-pre-release/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`The Image Cutout API is powered by Sensei, Adobeâ€™s Artificial Intelligence Technology, and Photoshop. The API's can identify the main subject of an image and produce two types of outputs. You can create a greyscale `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Layers_(digital_image_editing)#Layer_mask\"\n      }}>{`mask`}</a>{` png file that you can composite onto the original image (or any other).  You can also create a cutout where the mask has already composited onto your original image so that everything except the main subject has been removed.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Original`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Mask`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Cutout`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}><img parentName=\"td\" {...{\n              \"src\": \"assets/sensei_orig.jpg?raw=true\",\n              \"alt\": \"Alt text\",\n              \"title\": \"Original Image\"\n            }}></img></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}><img parentName=\"td\" {...{\n              \"src\": \"assets/sensei_mask.png?raw=true\",\n              \"alt\": \"Alt text\",\n              \"title\": \"Mask\"\n            }}></img></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}><img parentName=\"td\" {...{\n              \"src\": \"assets/sensei_cutout.png?raw=true\",\n              \"alt\": \"Alt text\",\n              \"title\": \"Original Image\"\n            }}></img></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"general-workflow\"\n    }}>{`General Workflow`}</h2>\n    <p>{`The typical workflow involves making an API POST call to the endpoint `}<a parentName=\"p\" {...{\n        \"href\": \"https://image.adobe.io/sensei\"\n      }}>{`https://image.adobe.io/sensei`}</a>{` for which the response will contain a link to check the status of the asynchronous job. Making a GET call to this link will return the status of the job and, eventually, the links to your generated output.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}